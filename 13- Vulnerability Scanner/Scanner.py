from bs4 import BeautifulSoup
import urllib.parse
import requests
import re

class Scanner:
    def __init__(self, url, ignore_links):
        self.session = requests.Session()
        self.target_url = url
        self.target_links = []
        self.ignore_links = ignore_links

    def extract_links(self, url):
        response = self.session.get(url)
        try:
            # response.content'i ISO-8859-1 formatında bir stringe çevir
            content = response.content.decode('iso-8859-1')
        except UnicodeDecodeError:
            # Eğer ISO-8859-1 ile çözümlenemiyorsa, alternatif bir kodlama kullan
            content = response.content.decode('utf-8', errors='replace')
        return re.findAll('(?:href=")(.*?)"', content)

    def crawl(self, url=None):
        if url is None:
            url = self.target_url
        href_links = self.extract_links(url)
        for link in href_links:
            link = urllib.parse.urljoin(url, link)

            if '#' in link:
                link = link.split('#')[0]

            if self.target_url in link and link not in self.target_links and link not in self.ignore_links:
                self.target_links.append(link)
                print(link)
                self.crawl(link)


    def extract_forms(self, url):
        response = self.session.get(url)
        parsed_html = BeatifulSoup(response.content)
        return parsed_html.findAll('form')

    
    def submit_form(self, form, value, url):
        action = form.get('action')
        post_url = urllib.parse.urljoin(url,action)
        method = form.get('method')

        inputs_list = form.findAll('input')
        post_data = {}
        for input in inputs_list:
            input_name = input.get('name')
            input_type = input.get('type')
            input_value = input.get('value')

            if input_type == 'text':
                input_value = value
            
            post_data[input_name] = input_value

        if method == 'post':
            return self.session.post(post_url, data=post_data)

        else:
            return self.session.get(post_url, params=post_data)